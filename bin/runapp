#!/bin/bash

source $SPATIAL_HOME/apps/bin/common

function clean() {
	path=$1
}

function beginPass() {
	pass=$1
	log=${logs[$pass]}
	if [ -e $log ]; then
		rm $log
	fi
}

function endPass {
	pass=$1
	echo $! > $PID_LOG
	wait $!
	sleep 0.1
	echo "-------------$pass(DONE)------------" >> $log
	passStatus $pass
	prog=${progress[$pass]}
	if [[ $prog == "KILLED\|FAILED" ]]; then
		exit
	fi
}

echo $app

if [[ $regen == 'true' ]]; then
	rm -r $SPATIAL_HOME/gen/$app
	mkdir $SPATIAL_HOME/gen/$app
	rm $PIR_HOME/apps/src/gen/${app}.scala
	rm -r $PIR_HOME/out/$app
	mkdir -p $PIR_HOME/apps/src/gen/
	mkdir -p $PIR_HOME/out/$app
	for pass in ${passes[@]}; do
		log=${logs[$pass]}
		if [ -e $log ]; then rm $log; echo "rm $log" ; fi
	done
fi

pass="GEN_PIR"
if [[ $regen == 'true' ]]; then
	beginPass $pass 
	cd $SPATIAL_HOME
	$SPATIAL_HOME/bin/spatial $app --dot --cgra+ &>> $log &
	endPass $pass
fi

pass="FIT_PIR"
if [[ $regen == 'true' ]] && [[ ${progress["GEN_PIR"]}=='SUCCESS' ]]; then
	beginPass $pass 
	cd $PIR_HOME
	$PIR_HOME/bin/pir $app --debug --mapping=false --verbose --simulate=false --arch=SN16x8_LD &>> $log &
	endPass $pass
fi

pass="GEN_CHISEL"
if [[ $regen == 'true' ]] && [[ ${progress["FIT_PIR"]}=='SUCCESS' ]]; then
	beginPass $pass 
	cd $SPATIAL_HOME
	$SPATIAL_HOME/bin/spatial $app --retiming --synth &>> $log &
	endPass $pass
fi

pass="MAKE_VCS"
if [[ $regen == 'true' ]] && [[ ${progress["GEN_CHISEL"]}=='SUCCESS' ]]; then
	beginPass $pass 
	cd $SPATIAL_HOME/gen/$app/
	make vcs &>> $log &
	endPass $pass
fi

pass="MAP_PIR"
if [[ $STATUS=="SUCCESS" ]] && [[ ${progress["MAKE_VCS"]}=='SUCCESS' ]]; then
	beginPass $pass 
	cd $PIR_HOME
	$PIR_HOME/bin/pir $app --debug --mapping=true --verbose --simulate=false --arch=SN16x8_LD &>> $log &
	endPass $pass
fi

pass="RUN_SIMULATION"
if [[ $STATUS=="SUCCESS" ]] && [[ ${progress["MAP_PIR"]}=='SUCCESS' ]]; then
	beginPass $pass 
	cd $SPATIAL_HOME/gen/$app/
	chmod u+wrx run.sh
	./run.sh $args &>> $log &
	endPass $pass
fi

pass="RUN_SIMULATION"; log=${logs[$pass]}; 
cycle=$(grep "Design ran for" $log)
passed=$(grep "PASS" $log)
echo "$timestemp $app $cycle args=[$args] $passed" >> $LOG_FILE 
echo "$timestemp $app $cycle args=[$args] $passed"
