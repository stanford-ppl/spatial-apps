#!/bin/bash

source $SPATIAL_HOME/apps/bin/common

PID=$(cat $PID_LOG)

declare -A colors
colors["SUCCESS"]=$GREEN
colors["KILLED"]=$RED
colors["FAILED"]=$RED
colors["RUNNING"]=$INFO
colors["NOTRUN"]=$INFO

function act() {
  if [[ $RESP == "k" ]]; then
    for pass in ${passes[@]}; do
      if [[ ${progress[$pass]} == "RUNNING" ]]; then
        if [[ $PID != "" ]] && [[ -e /proc/$PID ]]; then
  	      echo -e "${RED}Kill $pass ($PID)$NC for $SPATIAL_HOME/gen/$app?"
  	      read -p "" RESP
  	      if [ "$RESP" = "y" ]; then
  	      	log=${logs[$pass]}
  	      	echo -e "-------------${CYAN}$pass(KILLED)${NC}------------" >> $log
  	      	kill -9 $PID
  	      	echo "killed $PID"
  	      fi
        else
          clean_log $pass
        fi
      fi
    done
  elif [[ $RESP == "r "* ]]; then
    for pass in ${passes[@]}; do
      if [[ $RESP == "r $pass" ]]; then
        clean_log $pass
      fi
    done
  elif [[ $RESP == "s"* ]]; then
    for pass in ${passes[@]}; do
      if [[ $RESP == "s $pass" ]] || [[ ${progress[$pass]} == "RUNNING" ]] || [[ ${progress[$pass]} == "FAILED" ]]; then
  	    echo -e "${CYAN}Show${NC} $pass for $SPATIAL_HOME/gen/$app"
  	    log=${logs[$pass]}
        cat $log
      fi
    done
  elif [[ $RESP == "o"* ]]; then
    for pass in ${passes[@]}; do
      if [[ $RESP == "s $pass" ]] || [[ ${progress[$pass]} == "RUNNING" ]] || [[ ${progress[$pass]} == "FAILED" ]]; then
  	    log=${logs[$pass]}
        vim $log
      fi
    done
  fi
}

function show() {
  for pass in ${passes[@]}; do
  	log=${logs[$pass]}
  	passStatus $pass
  	prog=${progress[$pass]}
  	echo -e "${colors[$prog]}$pass($prog)${NC} $log"
  	if [[ $prog == "RUNNING" ]]; then
  		break
    fi
  done
}

show
read -p "" RESP
while [[ $RESP != "" ]]; do
  act $RESP
  show
  read -p "" RESP
done

